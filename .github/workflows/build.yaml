name: Build and Release Electron App

on:
  workflow_dispatch:

jobs:
  build-electron:
    strategy:
      matrix:
        os: [macos-13, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Download and prepare backend (macOS)
        if: matrix.os == 'macos-13'
        shell: bash
        run: |
          curl -L -o backend.zip https://github.com/logan-taggart/TRAIT-Back/releases/latest/download/backend-macintel.zip
          unzip backend.zip -d temp-backend
          rm -rf backend
          cp -r temp-backend/backend backend
          chmod +x backend/backend
          rm -rf backend.zip temp-backend

      - name: Download and prepare backend (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          Invoke-WebRequest -Uri "https://github.com/logan-taggart/TRAIT-Back/releases/latest/download/backend-windows.zip" -OutFile "backend.zip"
          Expand-Archive -Path "backend.zip" -DestinationPath "temp-backend" -Force
          Remove-Item -Recurse -Force backend -ErrorAction SilentlyContinue
          Copy-Item -Path "temp-backend/backend" -Destination "backend" -Recurse -Force
          Remove-Item backend.zip
          Remove-Item -Recurse -Force temp-backend

      - name: Build Electron app
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run build-all

      - name: Create release artifacts folder
        run: mkdir -p release-artifacts

      - name: Zip Electron build (macOS)
        if: matrix.os == 'macos-13'
        run: zip -r release-artifacts/TRAIT-MacIntel.zip dist

      - name: Zip Electron build (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: Compress-Archive -Path dist\* -DestinationPath release-artifacts/TRAIT-Windows.zip

      - name: Upload release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-zips-${{ matrix.os }}
          path: release-artifacts/

  release:
    name: Create GitHub Release
    needs: build-electron
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download macOS zipped build
        uses: actions/download-artifact@v4
        with:
          name: release-zips-macos-13
          path: release-artifacts

      - name: Download Windows zipped build
        uses: actions/download-artifact@v4
        with:
          name: release-zips-windows-latest
          path: release-artifacts

      - name: Authenticate with gh CLI
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Create GitHub Release
        run: |
          gh release create "release-${{ github.run_id }}" \
            release-artifacts/TRAIT-MacIntel.zip \
            release-artifacts/TRAIT-Windows.zip \
            --title "TRAIT Release ${{ github.run_id }}" \
            --notes "Automated release for commit `${{ github.sha }}`"